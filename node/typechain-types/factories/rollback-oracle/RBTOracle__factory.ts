/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  RBTOracle,
  RBTOracleInterface,
} from "../../rollback-oracle/RBTOracle";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "RBTDeployed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "SahayakRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "SahayakUnregistered",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimals_",
        type: "uint8",
      },
    ],
    name: "deployRBT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getReversePeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isRBTtoken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610428806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063b02a67c314610046578063b61db18114610064578063dedae14d14610094575b600080fd5b61004e6100b0565b60405161005b91906100f8565b60405180910390f35b61007e60048036038101906100799190610185565b6100ba565b60405161008b91906101cd565b60405180910390f35b6100ae60048036038101906100a99190610367565b6100da565b005b6000610a8c905090565b60006020528060005260406000206000915054906101000a900460ff1681565b505050565b6000819050919050565b6100f2816100df565b82525050565b600060208201905061010d60008301846100e9565b92915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061015282610127565b9050919050565b61016281610147565b811461016d57600080fd5b50565b60008135905061017f81610159565b92915050565b60006020828403121561019b5761019a61011d565b5b60006101a984828501610170565b91505092915050565b60008115159050919050565b6101c7816101b2565b82525050565b60006020820190506101e260008301846101be565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61023b826101f2565b810181811067ffffffffffffffff8211171561025a57610259610203565b5b80604052505050565b600061026d610113565b90506102798282610232565b919050565b600067ffffffffffffffff82111561029957610298610203565b5b6102a2826101f2565b9050602081019050919050565b82818337600083830152505050565b60006102d16102cc8461027e565b610263565b9050828152602081018484840111156102ed576102ec6101ed565b5b6102f88482856102af565b509392505050565b600082601f830112610315576103146101e8565b5b81356103258482602086016102be565b91505092915050565b600060ff82169050919050565b6103448161032e565b811461034f57600080fd5b50565b6000813590506103618161033b565b92915050565b6000806000606084860312156103805761037f61011d565b5b600084013567ffffffffffffffff81111561039e5761039d610122565b5b6103aa86828701610300565b935050602084013567ffffffffffffffff8111156103cb576103ca610122565b5b6103d786828701610300565b92505060406103e886828701610352565b915050925092509256fea26469706673582212205421c8bc15837fd7e7cf7f7ae775b366d9bd4a8a2f1b308004e9649302a2d53364736f6c63430008180033";

type RBTOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RBTOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RBTOracle__factory extends ContractFactory {
  constructor(...args: RBTOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      RBTOracle & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): RBTOracle__factory {
    return super.connect(runner) as RBTOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RBTOracleInterface {
    return new Interface(_abi) as RBTOracleInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): RBTOracle {
    return new Contract(address, _abi, runner) as unknown as RBTOracle;
  }
}
