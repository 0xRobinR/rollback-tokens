/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  RBTOracle,
  RBTOracleInterface,
} from "../../rollback-oracle/RBTOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "verifier_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "RBTDeployed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "SahayakRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "SahayakUnregistered",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimals_",
        type: "uint8",
      },
    ],
    name: "deployRBT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getReversePeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isRBTtoken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "a",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "b",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "c",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[1]",
        name: "input",
        type: "uint256[1]",
      },
    ],
    name: "verifySahayak",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610ba3380380610ba3833981810160405281019061003291906100dc565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610109565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a98261007e565b9050919050565b6100b98161009e565b81146100c457600080fd5b50565b6000815190506100d6816100b0565b92915050565b6000602082840312156100f2576100f1610079565b5b6000610100848285016100c7565b91505092915050565b610a8b806101186000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631f441cf514610051578063b02a67c314610081578063b61db1811461009f578063dedae14d146100cf575b600080fd5b61006b600480360381019061006691906104bb565b6100eb565b604051610078919061053f565b60405180910390f35b610089610199565b6040516100969190610569565b60405180910390f35b6100b960048036038101906100b491906105e2565b6101a3565b6040516100c6919061053f565b60405180910390f35b6100e960048036038101906100e491906106fd565b6101c3565b005b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343753b4d868686866040518563ffffffff1660e01b815260040161014e94939291906109b5565b602060405180830381865afa15801561016b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061018f9190610a28565b9050949350505050565b6000610a8c905090565b60006020528060005260406000206000915054906101000a900460ff1681565b505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61022a826101e1565b810181811067ffffffffffffffff82111715610249576102486101f2565b5b80604052505050565b600061025c6101c8565b90506102688282610221565b919050565b600067ffffffffffffffff821115610288576102876101f2565b5b602082029050919050565b600080fd5b6000819050919050565b6102ab81610298565b81146102b657600080fd5b50565b6000813590506102c8816102a2565b92915050565b60006102e16102dc8461026d565b610252565b905080602084028301858111156102fb576102fa610293565b5b835b81811015610324578061031088826102b9565b8452602084019350506020810190506102fd565b5050509392505050565b600082601f830112610343576103426101dc565b5b60026103508482856102ce565b91505092915050565b600067ffffffffffffffff821115610374576103736101f2565b5b602082029050919050565b600061039261038d84610359565b610252565b905080604084028301858111156103ac576103ab610293565b5b835b818110156103d557806103c1888261032e565b8452602084019350506040810190506103ae565b5050509392505050565b600082601f8301126103f4576103f36101dc565b5b600261040184828561037f565b91505092915050565b600067ffffffffffffffff821115610425576104246101f2565b5b602082029050919050565b600061044361043e8461040a565b610252565b9050806020840283018581111561045d5761045c610293565b5b835b81811015610486578061047288826102b9565b84526020840193505060208101905061045f565b5050509392505050565b600082601f8301126104a5576104a46101dc565b5b60016104b2848285610430565b91505092915050565b60008060008061012085870312156104d6576104d56101d2565b5b60006104e48782880161032e565b94505060406104f5878288016103df565b93505060c06105068782880161032e565b92505061010061051887828801610490565b91505092959194509250565b60008115159050919050565b61053981610524565b82525050565b60006020820190506105546000830184610530565b92915050565b61056381610298565b82525050565b600060208201905061057e600083018461055a565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105af82610584565b9050919050565b6105bf816105a4565b81146105ca57600080fd5b50565b6000813590506105dc816105b6565b92915050565b6000602082840312156105f8576105f76101d2565b5b6000610606848285016105cd565b91505092915050565b600080fd5b600067ffffffffffffffff82111561062f5761062e6101f2565b5b610638826101e1565b9050602081019050919050565b82818337600083830152505050565b600061066761066284610614565b610252565b9050828152602081018484840111156106835761068261060f565b5b61068e848285610645565b509392505050565b600082601f8301126106ab576106aa6101dc565b5b81356106bb848260208601610654565b91505092915050565b600060ff82169050919050565b6106da816106c4565b81146106e557600080fd5b50565b6000813590506106f7816106d1565b92915050565b600080600060608486031215610716576107156101d2565b5b600084013567ffffffffffffffff811115610734576107336101d7565b5b61074086828701610696565b935050602084013567ffffffffffffffff811115610761576107606101d7565b5b61076d86828701610696565b925050604061077e868287016106e8565b9150509250925092565b600060029050919050565b600081905092915050565b6000819050919050565b6107b181610298565b82525050565b60006107c383836107a8565b60208301905092915050565b6000602082019050919050565b6107e581610788565b6107ef8184610793565b92506107fa8261079e565b8060005b8381101561082b57815161081287826107b7565b965061081d836107cf565b9250506001810190506107fe565b505050505050565b600060029050919050565b600081905092915050565b6000819050919050565b600081905092915050565b61086781610788565b6108718184610853565b925061087c8261079e565b8060005b838110156108ad57815161089487826107b7565b965061089f836107cf565b925050600181019050610880565b505050505050565b60006108c1838361085e565b60408301905092915050565b6000602082019050919050565b6108e381610833565b6108ed818461083e565b92506108f882610849565b8060005b8381101561092957815161091087826108b5565b965061091b836108cd565b9250506001810190506108fc565b505050505050565b600060019050919050565b600081905092915050565b6000819050919050565b6000602082019050919050565b61096781610931565b610971818461093c565b925061097c82610947565b8060005b838110156109ad57815161099487826107b7565b965061099f83610951565b925050600181019050610980565b505050505050565b6000610120820190506109cb60008301876107dc565b6109d860408301866108da565b6109e560c08301856107dc565b6109f361010083018461095e565b95945050505050565b610a0581610524565b8114610a1057600080fd5b50565b600081519050610a22816109fc565b92915050565b600060208284031215610a3e57610a3d6101d2565b5b6000610a4c84828501610a13565b9150509291505056fea2646970667358221220f75f0e9f15791975d589419b2ec623b0e7c4ac1c0016eb5d948b4f538ac6af3564736f6c63430008180033";

type RBTOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RBTOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RBTOracle__factory extends ContractFactory {
  constructor(...args: RBTOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    verifier_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(verifier_, overrides || {});
  }
  override deploy(
    verifier_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(verifier_, overrides || {}) as Promise<
      RBTOracle & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): RBTOracle__factory {
    return super.connect(runner) as RBTOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RBTOracleInterface {
    return new Interface(_abi) as RBTOracleInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): RBTOracle {
    return new Contract(address, _abi, runner) as unknown as RBTOracle;
  }
}
